<html>
  <head>
    <style>
      body {
        font-family: 'Open Sans', sans-serif;
        width: 95%;
        margin: 0 auto;
        padding: 1em 0 2em;
        color: #000000;
      }

      #searchInput {
        width: 95%;
        display: block;
        margin-right: auto;
        margin-left: auto;
        margin-bottom: 6px;
        font-size: 16px;
        padding: 6px 10px 6px 20px;
        background-color: #000000;
        color: #FFFFFF;
        border: 1px solid #000000;
      }

      ::placeholder {
        color: #FFFFFF;
      }

      table {
        width: 95%;
        border-collapse: collapse;
        margin-left:auto;
        margin-right:auto;
      }

      tr:nth-child(odd) {
        background-color: #FFFFFF;
      }

      tr:nth-child(even) {
        background-color: #DCDCDC;
      }

      table, th, td {
        border: 1px solid #000000;
        padding: 3px;
      }

      th {
        background-color: #000000;
        color: #FFFFFF;
        cursor: pointer;
      }

      p {
        width: 95%;
        margin-left:auto;
        margin-right:auto;
        color: #000000;
      }
    </style>
    <title>Report for 'output.binlog'</title>
  </head>
  <body>
    <script>
      function searchTable() {
        let input = document.getElementById("searchInput");
        let filter = input.value.toUpperCase();
        let table = document.getElementById("errorsAndWarningsTable");
        let tr = table.getElementsByTagName("tr");
        let columnLength = table.rows[0].cells.length;
        for (let i = 1; i < tr.length; i++) {
          let found = false;
          for (let j = 0; j < columnLength; j++) {
            let td = tr[i].getElementsByTagName("td")[j];
            if (td) {
              txtValue = td.textContent || td.innerText;
              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                found = true;
                continue;
              }
            }
          }

          if (found) {
            tr[i].style.display = "";
          } else {
            tr[i].style.display = "none";
          }
        }
      }

      function sortTable(columnIndex, isNumeric) {
        let table = document.getElementById("errorsAndWarningsTable");
        let switching = true;
        let dir = "asc";
        let shouldSwitch = false;
        let switchCount = 0;
        let i = 0;

        while (switching) {
          switching = false;
          let rows = table.rows;
          for (i = 1; i<(rows.length - 1); i++) {
            shouldSwitch = false;
            let x = rows[i].getElementsByTagName("TD")[columnIndex];
            let y = rows[i + 1].getElementsByTagName("TD")[columnIndex];
            if (dir == "asc") {
              if (isNumeric) {
                if (Number(x.innerHTML) > Number(y.innerHTML)) {
                  shouldSwitch = true;
                  break;
                }
              } else {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                  shouldSwitch = true;
                  break;
                }
              }
            } else if (dir == "desc") {
                if (isNumeric) {
                  if (Number(x.innerHTML) < Number(y.innerHTML)) {
                    shouldSwitch = true;
                    break;
                  }
              } else {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                  shouldSwitch = true;
                  break;
                }
              }
            }
          }

          if (shouldSwitch) {
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            switchCount++;
          } else {
            if (switchCount == 0 && dir == "asc") {
              dir = "desc";
              switching = true;
            }
          }
        }
      }
    </script>
    <p>Build report for '\ProjectWithoutErrorsOrWarnings\output.binlog'.</br>Errors:&nbsp;0,&nbsp;Warnings:&nbsp;0</p>
    <input type="text" id="searchInput" onkeyup="searchTable()" placeholder="Search table...">
    <table id="errorsAndWarningsTable">
      <th style="width: 5%" onclick="sortTable(0, false)">Type</th><th style="width: 10%" onclick="sortTable(1, false)">Code</th><th style="width: 40%" onclick="sortTable(2, false)">Description</th><th style="width: 40%" onclick="sortTable(3, false)">File</th><th style="width: 5%" onclick="sortTable(4, true)">Line</th>

    </table>
  </body>
</html>