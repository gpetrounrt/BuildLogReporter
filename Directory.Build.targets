<Project>

  <Target Condition=" '$(IsTestProject)' == 'false' And '$(IsTestSupportProject)' == 'false' "
          Name="SetAssemblyInfoVersions"
          AfterTargets="PrepareForBuild"
          BeforeTargets="GenerateAssemblyInfo;GetPackageMetadata;GenerateNuspec;Pack"
          DependsOnTargets="GitVersion;AddSourceRevisionToInformationalVersion">

    <PropertyGroup>
      <AssemblyVersion>$(GitBaseVersion)</AssemblyVersion>
      <FileVersion>$(AssemblyVersion).$(GitCommits)</FileVersion>

      <!-- When building from a non-release branch or tag. -->
      <InformationalVersion>$(AssemblyVersion)-pre.$(GitCommits).g$(GitCommit)</InformationalVersion>
      <PackageVersion>$(InformationalVersion)</PackageVersion>

      <!-- When building from a release branch. -->
      <InformationalVersion Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch($(GitBranch), '^\d+\.\d+\.x$')) ">$(AssemblyVersion).$(GitCommits)-g$(GitCommit)</InformationalVersion>
      <PackageVersion Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch($(GitBranch), '^\d+\.\d+\.x$')) ">$(AssemblyVersion)-pre.$(GitCommits)</PackageVersion>

      <!-- When building from a release tag. -->
      <InformationalVersion Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch($(GitTag), '^\d+\.\d+\.\d+$')) ">$(AssemblyVersion).$(GitCommits)-g$(GitCommit)</InformationalVersion>
      <PackageVersion Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch($(GitTag), '^\d+\.\d+\.\d+$')) ">$(AssemblyVersion)</PackageVersion>
    </PropertyGroup>

  </Target>

</Project>